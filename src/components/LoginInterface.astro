---
// src/components/LoginInterface.astro
---

<div class="glass-effect rounded-xl p-8 shadow-2xl w-full max-w-md">
    <h2 class="text-white text-2xl font-semibold mb-8 text-center">Sign In</h2>
    
    <form id="login-form" class="space-y-6">
        <!-- Email field -->
        <div>
            <input 
                type="email" 
                name="email"
                placeholder="Email" 
                class="input-field w-full text-white pb-2 text-lg"
                required
            >
        </div>
        
        <!-- Password field -->
        <div>
            <input 
                type="password" 
                name="password"
                placeholder="Password" 
                class="input-field w-full text-white pb-2 text-lg"
                required
            >
        </div>
        
        <!-- Sign In button -->
        <button 
            type="submit" 
            class="sign-in-btn w-full py-3 rounded-lg text-white font-medium text-lg"
        >
            Sign In
        </button>
        
        <!-- Divider -->
        <div class="flex items-center my-6">
            <div class="flex-1 h-px bg-white/20"></div>
            <span class="px-4 text-white/60 text-sm">or</span>
            <div class="flex-1 h-px bg-white/20"></div>
        </div>
        
        <!-- Google sign in -->
        <button 
            type="button" 
            id="google-signin-btn"
            class="google-btn w-full py-3 rounded-lg font-medium text-lg flex items-center justify-center space-x-3"
        >
            <!-- Google icon -->
            <svg class="w-5 h-5" viewBox="0 0 24 24">
                <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            <span>Google</span>
        </button>
    </form>
    
    <!-- Register link -->
    <div class="text-center mt-6">
        <span class="text-white/70">Don't have an account? </span>
        <button 
            id="open-signup-modal" 
            type="button"
            class="text-white hover:text-white/90 underline font-medium bg-transparent border-none cursor-pointer"
        >
            Register
        </button>
    </div>
</div>

<!-- Modal de Registro -->
<div id="signup-modal" class="modal-overlay">
    <div class="modal-content glass-effect rounded-xl p-8 shadow-2xl w-full max-w-md">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-white text-2xl font-semibold">Sign Up</h2>
            <button id="close-modal-button" class="text-white/70 hover:text-white text-2xl">×</button>
        </div>
        
        <form id="signup-form" class="space-y-6">
            <!-- Name field -->
            <div>
                <input 
                    type="text" 
                    name="name"
                    placeholder="Nombre" 
                    class="input-field w-full text-white pb-2 text-lg"
                    required
                >
            </div>
            
            <!-- Email field -->
            <div>
                <input 
                    type="email" 
                    name="email"
                    placeholder="Email" 
                    class="input-field w-full text-white pb-2 text-lg"
                    required
                >
            </div>
            
            <!-- Password field -->
            <div>
                <input 
                    type="password" 
                    name="password"
                    placeholder="Password" 
                    class="input-field w-full text-white pb-2 text-lg"
                    required
                >
            </div>
            
            <!-- Sign Up button -->
            <button 
                type="submit" 
                class="sign-in-btn w-full py-3 rounded-lg text-white font-medium text-lg"
            >
                Sign Up
            </button>
            
            <!-- Divider -->
            <div class="flex items-center my-6">
                <div class="flex-1 h-px bg-white/20"></div>
                <span class="px-4 text-white/60 text-sm">or</span>
                <div class="flex-1 h-px bg-white/20"></div>
            </div>
            
            <!-- Google sign up -->
            <button 
                type="button" 
                id="google-signup-btn"
                class="google-btn w-full py-3 rounded-lg font-medium text-lg flex items-center justify-center space-x-3"
            >
                <!-- Google icon -->
                <svg class="w-5 h-5" viewBox="0 0 24 24">
                    <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                    <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                    <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                    <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                </svg>
                <span>Google</span>
            </button>
        </form>
    </div>
</div>

<script>
// Importamos las funciones y servicios de Firebase
import { auth, db } from "../lib/firebase"; 
import { createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from "firebase/auth";
import { doc, setDoc } from "firebase/firestore";

// Función de manejo del login
const loginHandler = async (e: Event) => {
  e.preventDefault();
  const form = e.currentTarget as HTMLFormElement;
  const formData = new FormData(form);
  
  const email = formData.get("email") as string;
  const password = formData.get("password") as string;

  if (!email || !password) {
    alert("Por favor, completa todos los campos.");
    return;
  }

  try {
    const userCredential = await signInWithEmailAndPassword(auth, email, password);
    alert("¡Inicio de sesión exitoso!");
    window.location.href = "/dashboard";
  } catch (error: any) {
    console.error("Error de inicio de sesión:", error.code, error.message);
    let errorMessage = "Ocurrió un error inesperado.";
    if (error.code === "auth/user-not-found") {
      errorMessage = "No existe una cuenta con este correo electrónico.";
    } else if (error.code === "auth/wrong-password") {
      errorMessage = "Contraseña incorrecta.";
    } else if (error.code === "auth/invalid-email") {
      errorMessage = "El correo electrónico no es válido.";
    }
    alert(errorMessage);
  }
};

// Función de manejo del registro de usuario
const signupHandler = async (e: Event) => {
  e.preventDefault();
  const form = e.currentTarget as HTMLFormElement;
  const formData = new FormData(form);
  
  const email = formData.get("email") as string;
  const password = formData.get("password") as string;
  const name = formData.get("name") as string;

  if (!email || !password || !name) {
    alert("Por favor, completa todos los campos.");
    return;
  }

  try {
    const userCredential = await createUserWithEmailAndPassword(auth, email, password);
    const user = userCredential.user;

    const userDocRef = doc(db, "users", user.uid);
    await setDoc(userDocRef, {
      name: name,
      email: email,
      role: "normal",
      createdAt: new Date().toISOString(),
      activeBoardIds: [],
    });

    alert("¡Registro exitoso! Ya puedes iniciar sesión.");
    // Cierra el modal y redirige
    const modal = document.getElementById('signup-modal');
    if (modal) modal.classList.remove('is-active');
    window.location.href = "/dashboard";

  } catch (error: any) {
    console.error("Error de registro:", error.code, error.message);
    let errorMessage = "Ocurrió un error inesperado.";
    if (error.code === "auth/email-already-in-use") {
      errorMessage = "El correo electrónico ya está en uso.";
    } else if (error.code === "auth/weak-password") {
      errorMessage = "La contraseña es muy débil.";
    }
    alert(errorMessage);
  }
};

// Función para Google Sign In
const googleSignInHandler = async () => {
  const provider = new GoogleAuthProvider();
  
  try {
    const result = await signInWithPopup(auth, provider);
    const user = result.user;
    
    // Verificar si es un nuevo usuario y crear documento si es necesario
    const userDocRef = doc(db, "users", user.uid);
    await setDoc(userDocRef, {
      name: user.displayName || "Usuario",
      email: user.email,
      role: "normal",
      createdAt: new Date().toISOString(),
      activeBoardIds: [],
    }, { merge: true });

    alert("¡Inicio de sesión con Google exitoso!");
    window.location.href = "/dashboard";
  } catch (error: any) {
    console.error("Error con Google Sign In:", error.code, error.message);
    alert("Error al iniciar sesión con Google.");
  }
};

// Event listeners cuando el DOM esté cargado
document.addEventListener('DOMContentLoaded', () => {
  // Lógica para el formulario de login
  const loginForm = document.getElementById('login-form');
  if (loginForm) {
    loginForm.addEventListener('submit', loginHandler);
  }

  // Lógica para Google Sign In
  const googleSignInBtn = document.getElementById('google-signin-btn');
  if (googleSignInBtn) {
    googleSignInBtn.addEventListener('click', googleSignInHandler);
  }

  // Lógica para Google Sign Up en el modal
  const googleSignUpBtn = document.getElementById('google-signup-btn');
  if (googleSignUpBtn) {
    googleSignUpBtn.addEventListener('click', googleSignInHandler);
  }

  // Lógica para mostrar y ocultar el modal
  const openModalButton = document.getElementById('open-signup-modal');
  const closeModalButton = document.getElementById('close-modal-button');
  const modal = document.getElementById('signup-modal');
  const signupForm = document.getElementById('signup-form');

  if (openModalButton && closeModalButton && modal && signupForm) {
    openModalButton.addEventListener('click', () => {
      modal.classList.add('is-active');
    });

    closeModalButton.addEventListener('click', () => {
      modal.classList.remove('is-active');
    });

    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('is-active');
      }
    });

    // Adjuntar el evento del formulario de registro
    signupForm.addEventListener('submit', signupHandler);
  }
});
</script>

<style>
    .glass-effect {
        backdrop-filter: blur(10px);
        background: rgba(68, 64, 60, 0.85);
    }
    
    .input-field {
        background: transparent;
        border: none;
        border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        outline: none;
        transition: border-color 0.3s ease;
    }
    
    .input-field:focus {
        border-bottom-color: rgba(255, 255, 255, 0.6);
    }
    
    .input-field::placeholder {
        color: rgba(255, 255, 255, 0.6);
    }
    
    .google-btn {
        background: white;
        color: #374151;
        border: none;
        transition: all 0.3s ease;
    }
    
    .google-btn:hover {
        background: #f9fafb;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    .sign-in-btn {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
    }
    
    .sign-in-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
    }

    /* Modal styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        z-index: 1000;
    }

    .modal-overlay.is-active {
        opacity: 1;
        visibility: visible;
    }

    .modal-content {
        transform: scale(0.9);
        transition: transform 0.3s ease;
    }

    .modal-overlay.is-active .modal-content {
        transform: scale(1);
    }
</style>