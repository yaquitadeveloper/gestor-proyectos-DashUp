---
// src/components/ModalSignup.astro

---
<div id="signup-modal" class="modal">
  <div class="modal-background"></div>
  <div class="modal-content">
    <div class="box">
      <form id="signup-form" class="flex flex-col gap-4 p-6 border rounded-lg shadow-lg">
        <h2 class="text-2xl font-bold text-center">Registrar Cuenta</h2>
        <label class="flex flex-col">
          <span class="text-sm font-medium">Nombre:</span>
          <input type="text" name="name" required class="p-2 border rounded" />
        </label>
        <label class="flex flex-col">
          <span class="text-sm font-medium">Correo Electrónico:</span>
          <input type="email" name="email" required class="p-2 border rounded" />
        </label>
        <label class="flex flex-col">
          <span class="text-sm font-medium">Contraseña:</span>
          <input type="password" name="password" required class="p-2 border rounded" />
        </label>
        <button type="submit" class="bg-blue-600 text-white font-bold py-2 px-4 rounded hover:bg-blue-700">
          Registrarse
        </button>
      </form>
    </div>
  </div>
  <button id="close-modal-button" class="modal-close is-large" aria-label="close"></button>
</div>

<style>
  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(5px);
  }
  .modal.is-active {
    display: flex;
  }
  .modal-content {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    z-index: 1001;
    max-width: 500px;
    width: 90%;
  }
</style>

<script>
  // src/scripts/modalLogic.ts
  // Importamos las funciones y servicios de Firebase
  import { auth, db } from "../lib/firebase"; 
  import { createUserWithEmailAndPassword } from "firebase/auth";
  import { doc, setDoc } from "firebase/firestore";

  // Función de manejo del registro de usuario
  const signupHandler = async (e: Event) => {
    e.preventDefault();
    const form = e.currentTarget as HTMLFormElement;
    const formData = new FormData(form);
    
    const email = formData.get("email") as string;
    const password = formData.get("password") as string;
    const name = formData.get("name") as string;

    if (!email || !password || !name) {
      alert("Por favor, completa todos los campos.");
      return;
    }

    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;

      const userDocRef = doc(db, "users", user.uid);
      await setDoc(userDocRef, {
        name: name,
        email: email,
        role: "normal",
        createdAt: new Date().toISOString(),
        activeBoardIds: [],
      });

      alert("¡Registro exitoso! Ya puedes iniciar sesión.");
      // Redirige al usuario y cierra el modal
      window.location.href = "/dashboard";

    } catch (error: any) {
      console.error("Error de registro:", error.code, error.message);
      let errorMessage = "Ocurrió un error inesperado.";
      if (error.code === "auth/email-already-in-use") {
        errorMessage = "El correo electrónico ya está en uso.";
      } else if (error.code === "auth/weak-password") {
        errorMessage = "La contraseña es muy débil.";
      }
      alert(errorMessage);
    }
  };

  // Lógica para mostrar y ocultar el modal
  const openModalButton = document.getElementById('open-signup-modal');
  const closeModalButton = document.getElementById('close-modal-button');
  const modal = document.getElementById('signup-modal');
  const form = document.getElementById('signup-form');

  if (openModalButton && closeModalButton && modal && form) {
    openModalButton.addEventListener('click', () => {
      modal.classList.add('is-active');
    });

    closeModalButton.addEventListener('click', () => {
      modal.classList.remove('is-active');
    });

    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('is-active');
      }
    });

    // Adjuntar el evento del formulario
    form.addEventListener('submit', signupHandler);
  }
</script>